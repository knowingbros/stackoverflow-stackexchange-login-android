apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

def apikeyPropertiesFile = rootProject.file("secrets.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.reputationoverflow"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.reputationoverflow.hilt.CustomTestRunner"

    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "STACK_EXCHANGE_KEY", apikeyProperties['STACK_EXCHANGE_KEY']
        }

        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "STACK_EXCHANGE_KEY", apikeyProperties['STACK_EXCHANGE_KEY']
        }
    }

    buildFeatures {
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    testOptions {
        junitPlatform {
            // Configuration
        }
    }
}

dependencies {
    implementation "androidx.multidex:multidex:$version_multidex"

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$version_kotlin"
    implementation "androidx.core:core-ktx:$version_core"
    implementation "androidx.appcompat:appcompat:$version_appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutines_test"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutines_test"

    // Testing
    testImplementation "org.junit.jupiter:junit-jupiter-api:$version_jupiter"
    testImplementation "io.mockk:mockk:$version_mockk"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$version_jupiter"
    androidTestImplementation "androidx.test.ext:junit:$version_android_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$version_espresso_core"
    // debugImplementation required vs testImplementation: https://issuetracker.google.com/issues/128612536
    debugImplementation("androidx.fragment:fragment-testing:$version_fragment") {
        exclude group:'androidx.test', module:'monitor'
    }
    androidTestImplementation "io.mockk:mockk-android:$version_mockk"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$version_espresso_intents"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_coroutines_test"
    testImplementation "androidx.arch.core:core-testing:$version_android_archtest"
    androidTestImplementation "androidx.arch.core:core-testing:$version_android_archtest"
    kaptTest "com.google.dagger:hilt-android-compiler:$version_hilt"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$version_hilt"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$version_hilt"
    kaptTest "androidx.hilt:hilt-compiler:$version_androidx_hilt"
    kaptAndroidTest "androidx.hilt:hilt-compiler:$version_androidx_hilt"
    testImplementation "com.squareup.okhttp3:mockwebserver:$version_mock_server"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"

    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$version_navigation"
    implementation "androidx.navigation:navigation-ui:$version_navigation"

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$version_navigation"

    // Testing Navigation
    // androidTestImplementation "androidx.navigation:navigation-testing:$version_navigation"
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation"

    // Retrofit 2
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-scalars:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$version_hilt"
    kapt "com.google.dagger:hilt-android-compiler:$version_hilt"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$version_androidx_hilt"
    kapt "androidx.hilt:hilt-compiler:$version_androidx_hilt"
}